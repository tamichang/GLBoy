
WavePlane wp = new WavePlane();

void setup() {
  size(600, 480, P3D);
  colorMode(HSB, 360, 100, 100, 100);
  background(0,0,0);
  stroke(330,13,99);
  //fill(150,13,99);
}

void draw() {
  background(0,0,0);
  
  
  //camera(mouseX*2, mouseY*2, (height/2.0) / tan(PI*30.0 / 180.0),
  //      width/2.0, height/2.0, 0,
  //       0, 1, 0);
  //translate(width/2, height/2);
  //rotateX(mouseX*0.01);
  //rotateY(mouseY*0.01);
  
  translate(width/20, height*0.6, 0);
  
  wp.draw();
  
  
}

class WavePlane {
  int line_count = 80;
  int point_count = 80;
  
  float[][][] line = new float[line_count][point_count][3];
  
  int dx = 10;
  int dz = -10;
  int wave_width = 100;
  float da = 0.1;
  float dla = 0.9;

  
  WavePlane() {
    for(int j=0; j<line_count; j++) {
      for(int i=0; i<point_count; i++) {
        float x = i*dx;
        float y = sin(i*da+dla) * wave_width/2;
        float[] point = {x, y, j*dz};
        line[j][i] = point;
      }
    }
  }
  
  void draw_point() {
    for(int j=0; j<line_count; j++) {
      for(int i=0; i<point_count; i++) {
        float[] p = line[j][i];
        point(p[0], p[1], p[2]);
      }
    }
  }
  
  void draw() {
    for(int l=0; l<line_count-1; l++) {
      for(int p=0; p<point_count-1; p++) {
        float[] p1, p2, p3, p4;
        p1 = line[l][p];
        p2 = line[l][p+1];
        p3 = line[l+1][p];
        p4 = line[l+1][p+1];
        beginShape(TRIANGLES);
        vertex(p1[0], p1[1], p1[2]);
        vertex(p2[0], p2[1], p2[2]);
        vertex(p3[0], p3[1], p3[2]);
        
        vertex(p2[0], p2[1], p2[2]);
        vertex(p3[0], p3[1], p3[2]);
        vertex(p4[0], p4[1], p4[2]);
        endShape();
      }
      
    }
  }
  
}